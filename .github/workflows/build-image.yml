name : Build and Push Docker Images

on :
    push :
        tags :
            - 'v*'
        branches :
            - 'releases/**'
env :
    REGISTRY : ${{ vars.IMAGE_DEPLOY_REPO }}
    IMAGE_NAME_FRONTEND : ${{ github.repository }}/frontend
    IMAGE_NAME_BACKEND : ${{ github.repository }}/backend

permissions :
    actions : write
    checks : read
    contents : read
    deployments : write
    packages : write
    pull-requests : read
    security-events : read
    statuses : read

jobs :
    build-backend-docker-image :
        runs-on : ubuntu-latest
        environment : production

        steps :
            -   name : Checkout repository
                uses : actions/checkout@v4

            -   name : Set up Docker Buildx
                uses : docker/setup-buildx-action@v3

            -   name : Set up QEMU
                uses : docker/setup-qemu-action@v3

            -   name : Log in to GitHub Container Registry
                uses : docker/login-action@v3
                with :
                    registry : ${{ env.REGISTRY }}
                    username : ${{ github.actor }}
                    password : ${{ secrets.GITHUB_TOKEN }}

            -   name : Extract metadata (tags, labels) for Docker
                id : meta
                uses : docker/metadata-action@v5
                with :
                    images : ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}
                    github-token : ${{ secrets.GITHUB_TOKEN }}
                    tags : |
                        type=raw,value=latest,enable={{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/releases/') }}
                        type=semver,pattern={{version}},enable={{ startsWith(github.ref, 'refs/heads/releases/v') || startsWith(github.ref, 'refs/tags/v') }}
                        type=semver,pattern={{major}}.{{minor}},enable={{ startsWith(github.ref, 'refs/heads/releases/v') || startsWith(github.ref, 'refs/tags/v') }}
                        type=semver,pattern={{major}},enable={{ startsWith(github.ref, 'refs/heads/releases/v') || startsWith(github.ref, 'refs/tags/v')}}
                        type=ref,event=branch
                        type=sha,format=short

            -   name : Build and push
                uses : docker/build-push-action@v5
                with :
                    context : .
                    push : true
                    tags : ${{ steps.meta.outputs.tags }}
                    labels : ${{ steps.meta.outputs.labels }}

    build-frontend-docker-image :
        runs-on : ubuntu-latest
        environment : production

        steps :
            -   name : Set up Docker Buildx
                uses : docker/setup-buildx-action@v3

            -   name : Set up QEMU
                uses : docker/setup-qemu-action@v3

            -   name : Log in to GitHub Container Registry
                uses : docker/login-action@v3
                with :
                    registry : ${{ env.REGISTRY }}
                    username : ${{ github.actor }}
                    password : ${{ secrets.GITHUB_TOKEN }}

            -   name : Extract metadata (tags, labels) for Docker
                id : meta
                uses : docker/metadata-action@v5
                with :
                    images : ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }}
                    github-token : ${{ secrets.GITHUB_TOKEN }}
                    tags : |
                        type=raw,value=latest,enable={{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/releases/') }}
                        type=semver,pattern={{version}},enable={{ startsWith(github.ref, 'refs/heads/releases/v') || startsWith(github.ref, 'refs/tags/v') }}
                        type=semver,pattern={{major}}.{{minor}},enable={{ startsWith(github.ref, 'refs/heads/releases/v') || startsWith(github.ref, 'refs/tags/v') }}
                        type=semver,pattern={{major}},enable={{ startsWith(github.ref, 'refs/heads/releases/v') || startsWith(github.ref, 'refs/tags/v')}}
                        type=ref,event=branch
                        type=sha,format=short

            -   name : Build and push
                uses : docker/build-push-action@v5
                with :
                    context : '{{defaultContext}}:frontend'
                    push : true
                    tags : ${{ steps.meta.outputs.tags }}
                    labels : ${{ steps.meta.outputs.labels }}
                    build-args : |
                        VITE_API_ENDPOINT=${{ secrets.VITE_API_ENDPOINT }}
                        VITE_KEYCLOAK_URL=${{ secrets.VITE_KEYCLOAK_URL }}
                        VITE_KEYCLOAK_CLIENT_ID=${{ secrets.VITE_KEYCLOAK_CLIENT_ID }}
                        VITE_KEYCLOAK_REALM=${{ secrets.VITE_KEYCLOAK_REALM }}
