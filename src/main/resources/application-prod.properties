server.port=${API_SERVER_PORT:8080}
spring.jpa.open-in-view=false
spring.docker.compose.enabled=false
spring.docker.compose.lifecycle-management=none
# true if we should use the in-memory repositories, otherwise the Spring Data JPA ones are used
resulter.repository.inmemory=false
spring.liquibase.enabled=true
spring.liquibase.show-summary=summary
spring.devtools.add-properties=false
logging.level.root=${RESULTER_LOG_LEVEL:WARN}
spring.security.oauth2.resourceserver.jwt.issuer-uri=${API_OAUTH2_RESOURCE_SERVER_JWT_ISSUER_URI:https://keycloak.jobst24.de/realms/resulter-prod}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${API_OAUTH2_RESOURCE_SERVER_JWT_JWK_SET_URI:https://keycloak.jobst24.de/realms/resulter-prod/protocol/openid-connect/certs}
cors.allowed-origins=${API_CORS_ALLOWED_ORIGINS:http://localhost:5173}
#spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.driver-class-name=com.p6spy.engine.spy.P6SpyDriver
spring.datasource.url=jdbc:p6spy:postgresql://${RESULTER_DATABASE_HOST:localhost}:${RESULTER_DATABASE_PORT:5432}/${POSTGRES_DB:resulter}
spring.datasource.username=${POSTGRES_USER:resulter}
spring.datasource.password=${POSTGRES_PASSWORD:resulter}
spring.main.allow-bean-definition-overriding=true
