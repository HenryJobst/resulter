app.version=@project.version@
server.port=${API_SERVER_PORT:8080}
spring.profiles.active=@activeProfile@
#server.servlet.context-path=/api
spring.jpa.open-in-view=false
spring.docker.compose.enabled=false
spring.docker.compose.lifecycle-management=none
# true if we should use the in-memory repositories, otherwise the Spring Data JPA ones are used
resulter.repository.inmemory=false
resulter.media-file-path=${RESULTER_MEDIA_FILE_PATH}
resulter.media-file-path-thumbnails=${RESULTER_MEDIA_FILE_PATH_THUMBNAILS}
resulter.media-file-thumbnails-size=100
spring.liquibase.enabled=true
spring.liquibase.show-summary=summary
spring.devtools.add-properties=false
logging.level.root=${RESULTER_LOG_LEVEL:WARN}
spring.jpa.show-sql=true
hibernate.show_sql=true
logging.level.org.springframework.jdbc.core.JdbcTemplate=WARN
logging.level.org.springframework.jdbc.core.StatementCreatorUtils=WARN
logging.level.org.springframework.jdbc.core=WARN
openapi.config.title=Resulter API
openapi.config.description=Resulter REST-API
openapi.config.version=1.3.1
openapi.config.contact.name=${OPENAPI_CONFIG_CONTACT_NAME}
openapi.config.contact.email=${OPENAPI_CONFIG_CONTACT_EMAIL}
spring.security.oauth2.resourceserver.jwt.issuer-uri=${API_OAUTH2_RESOURCE_SERVER_JWT_ISSUER_URI}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${API_OAUTH2_RESOURCE_SERVER_JWT_JWK_SET_URI}
cors.allowed-origins=${API_CORS_ALLOWED_ORIGINS}
management.endpoints.access.default=none
management.endpoint.health.access=read_only
management.endpoint.health.show-details=when_authorized
management.endpoint.info.access=read_only
management.endpoint.prometheus.access=read_only
management.endpoints.web.exposure.exclude=*
management.endpoints.jmx.exposure.exclude=*
security.prometheus.api-token=${PROMETHEUS_API_TOKEN}
spring.data.web.pageable.max-page-size=5000
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB
