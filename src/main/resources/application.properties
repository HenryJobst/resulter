server.port=8080
spring.profiles.active=@activeProfile@
#server.servlet.context-path=/api
spring.jpa.open-in-view=false
#spring.datasource.url=jdbc:h2:mem:testdb;DATABASE_TO_UPPER=FALSE
#spring.datasource.url=jdbc:h2:file:./data/demo;DATABASE_TO_UPPER=FALSE
#spring.datasource.username=test
#spring.datasource.password=test
#spring.datasource.driverClassName=org.h2.Driver
#spring.h2.console.enabled=true
spring.docker.compose.enabled=true
spring.docker.compose.lifecycle-management=start_only
spring.datasource.url=jdbc:postgresql://localhost:5432/resulter
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=resulter
spring.datasource.password=resulter
# true if we should use the in-memory repositories, otherwise the Spring Data JPA ones are used
resulter.repository.inmemory=false
spring.liquibase.enabled=true
spring.liquibase.show-summary=summary
spring.devtools.add-properties=false
logging.level.root=INFO
#logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG
#logging.level.org.springframework.jdbc.core.StatementCreatorUtils=TRACE
#logging.level.org.springframework.jdbc.core=DEBUG
openapi.config.title=Resulter API
openapi.config.description=Resulter REST-API
openapi.config.version=0.0.1
openapi.config.contact.name=Henry Jobst
openapi.config.contact.email=github@jobst-berlin.de
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://keycloak.jobst24.de/realms/resulter
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://keycloak.jobst24.de/realms/resulter/protocol/openid-connect/certs
cors.allowed-origins=http://localhost:5173
management.endpoints.enabled-by-default=false
management.endpoint.health.enabled=true
management.endpoint.info.enabled=false

